package com.dangnhat.mycontact;import android.content.Intent;import android.os.Build;import android.support.annotation.RequiresApi;import android.support.design.widget.TabLayout;import android.support.design.widget.FloatingActionButton;import android.support.design.widget.Snackbar;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.support.v4.app.Fragment;import android.support.v4.app.FragmentManager;import android.support.v4.app.FragmentPagerAdapter;import android.support.v4.view.ViewPager;import android.os.Bundle;import android.view.LayoutInflater;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.view.ViewGroup;import android.view.animation.AccelerateInterpolator;import android.view.animation.Animation;import android.view.animation.DecelerateInterpolator;import android.view.animation.ScaleAnimation;import android.widget.TextView;import com.dangnhat.mycontact.Model.Contact;import java.util.ArrayList;import java.util.List;public class MainActivity extends AppCompatActivity {    public static int tabIndex = 1;    public static ViewPagerAdapter adapter;    Menu menu;    int[] colorIntArray = {R.color.colorAccent, R.color.colorAccent, R.color.colorAccent};    int[] iconIntArray = {R.drawable.ic_person_add_white, R.drawable.ic_person_add_white, R.drawable.ic_group_add_white};    private Toolbar toolbar;    private TabLayout tabLayout;  /*  private int[] tabIcons = {            R.drawable.ic_star,            R.drawable.ic_star,            R.drawable.ic_star    };*/    //bo loc    private ViewPager viewPager;    private FloatingActionButton fab;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        toolbar = (Toolbar) findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        fab = (FloatingActionButton) findViewById(R.id.fab);        fab.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                Intent i;                if(tabIndex == 2){                    i = new Intent(getApplicationContext(), UpdateGroupActivity.class);                } else {                    i = new Intent(getApplicationContext(), UpdateContactActivity.class);                }                startActivity(i);            }        });    }    ;    @Override    protected void onStart() {        super.onStart();        viewPager = (ViewPager) findViewById(R.id.viewpager);        setupViewPager(viewPager);        tabLayout = (TabLayout) findViewById(R.id.tabs);        tabLayout.setupWithViewPager(viewPager);        tabLayout.getTabAt(tabIndex).select();        // setupTabIcons();        tabLayout.addOnTabSelectedListener(new TabLayout.OnTabSelectedListener() {            @Override            public void onTabSelected(TabLayout.Tab tab) {                //viewPager.setCurrentItem(tab.getPosition());                animateFab(tab.getPosition());                tabIndex = tab.getPosition();                MenuItem search = menu.findItem(R.id.action_search);                MenuItem filter = menu.findItem(R.id.action_filter);                if (tabIndex == 1) {                    search.setVisible(true);                    filter.setVisible(true);                } else {                    search.setVisible(false);                    filter.setVisible(false);                }            }            @Override            public void onTabUnselected(TabLayout.Tab tab) {            }            @Override            public void onTabReselected(TabLayout.Tab tab) {            }        });    }    ;    public void showFloatingActionButton() {        fab.show();    }    public void hideFloatingActionButton() {        fab.hide();    }    protected void animateFab(final int position) {        fab.clearAnimation();        // Scale down animation        ScaleAnimation shrink =  new ScaleAnimation(1f, 0.2f, 1f, 0.2f, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);        shrink.setDuration(150);     // animation duration in milliseconds        shrink.setInterpolator(new DecelerateInterpolator());        shrink.setAnimationListener(new Animation.AnimationListener() {            @Override            public void onAnimationStart(Animation animation) {            }            @RequiresApi(api = Build.VERSION_CODES.LOLLIPOP)            @Override            public void onAnimationEnd(Animation animation) {                // Change FAB color and icon                fab.setBackgroundTintList(getResources().getColorStateList(colorIntArray[position]));                fab.setImageDrawable(getResources().getDrawable(iconIntArray[position], null));                // Scale up animation                ScaleAnimation expand =  new ScaleAnimation(0.2f, 1f, 0.2f, 1f, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);                expand.setDuration(100);     // animation duration in milliseconds                expand.setInterpolator(new AccelerateInterpolator());                fab.startAnimation(expand);            }            @Override            public void onAnimationRepeat(Animation animation) {            }        });        fab.startAnimation(shrink);    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        this.menu = menu;        getMenuInflater().inflate(R.menu.menu_main, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_search) {            Intent i = new Intent(this, SearchActivity.class);            startActivity(i);            return true;        }        if (id == R.id.action_filter) {            Intent i = new Intent(this, FilterActivity.class);            startActivity(i);            return true;        }        return super.onOptionsItemSelected(item);    }    private void setupViewPager(ViewPager viewPager) {        adapter = new ViewPagerAdapter(getSupportFragmentManager());        adapter.addFragment(new FavoriteFragment(), "YÊU THÍCH");        adapter.addFragment(new ContactFragment(), "TẤT CẢ");        adapter.addFragment(new GroupFragment(), "NHÓM");        viewPager.setAdapter(adapter);    }    /* private void setupTabIcons() {        tabLayout.getTabAt(0).setIcon(tabIcons[0]);        tabLayout.getTabAt(1).setIcon(tabIcons[1]);        tabLayout.getTabAt(2).setIcon(tabIcons[2]);    }*/    public Fragment getFragment(int pos) {        return adapter.getItem(pos);    }    class ViewPagerAdapter extends FragmentPagerAdapter {        private final List<Fragment> mFragmentList = new ArrayList<>();        private final List<String> mFragmentTitleList = new ArrayList<>();        public ViewPagerAdapter(FragmentManager manager) {            super(manager);        }        @Override        public Fragment getItem(int position) {            return mFragmentList.get(position);        }        @Override        public int getCount() {            return mFragmentList.size();        }        public void addFragment(Fragment fragment, String title) {            mFragmentList.add(fragment);            mFragmentTitleList.add(title);        }        @Override        public CharSequence getPageTitle(int position) {            return mFragmentTitleList.get(position);        }    }}